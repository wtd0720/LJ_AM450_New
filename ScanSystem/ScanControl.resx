<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicState.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAzJJREFUWEe1
        Vz1v1EAQdYFtGoSEQELizgY6GhAdlNABFSJtKiT+AB0VBb+B33BCqaJ0KEJKfaLjzpcUESkTCXGRUgSK
        473xW9/6zh/3xZNWucy8mTe7Xu+Og0WR3QyuDTrR6yyJesMk+o6/JxgXGiey9YwDrsLWx2EaPcjS+DME
        fkFgssgwLmIYqzSrIUujT0g49pJfIvnesBt9GKTh28M0fsXB37TRR47HHzOH0i2HLIkPvET9YRK++9EJ
        bshdC3LIZcw0Pj6QezEg4MwFM5nMS0OFuCLOZG4GyMcuaJTGL2ReGcwxLSI6lrkaIHxxZJk2BpeXGjKV
        oQ2XkzrRQ5k3BuYs8s9uTHvVtNvXeeZt8PbEuPSK8p2Voy9TCXi9Pmbd8Bv8WzLVghxyGSNTCdQwLWia
        oX8/uD5Kot801s0ePtsbSPqX773Mc6CPHBOoedZuFahJ7WCUhNsK+HN0O7glXgnwbRWJ0+g8S68+l6sA
        beZToYyRqwRqUIs8anN5dyxxEu6LUwnOzglg+U6H6ZWncgX8TVvui86bVomgFrnUZgG8RCY8SuWvRT5L
        CeECGt0LH3Hwt9noq1idWVDLNKHN5bVgnufyN8JmWwhGIxsqyF+VJlDLxbAAXqeTtmXzYbOeClshtMnd
        CnuceezFagXcQQFdrwD8pk3uVqivKApY6hEM7oZPIPjTCReFwEafaI0YduP3FsNHsOQmfIZDJt+EEOSs
        tRoqCD5wRK8FDyHT1Cbs6Z89+SuBW+0lePlrCCF/tvmqqDBwyJWrEjiMvorb85/HZV3DgXP7DVbInXA8
        iOZmaaujAslljFwlHKXhY+WZUNuaTcze+r2Go3jXJW6aHX1eobsylzDo5reuabrm1T0TjMbLqG5WPsgh
        lzEylQCNgWm5y4jg1Qjjf7+OvYmWr2MCh0nRkLCNknljcLegjbpO2e+EZdoYCvG2DtnviDfRmpVasVU6
        43X2RGnZ2zriWSCg6JAx7MOkrmHxQY6EvQ+Tmk64DdqY/qcZOplwn8d21aeZGg3rdjRW/zRzsFcUr4/r
        GxcZxkXM3Ku2DvLmNdzGAbODUfl5Th851mwuhCD4B3KHpZq/0aCpAAAAAElFTkSuQmCC
</value>
  </data>
</root>